{"ast":null,"code":"import _defineProperty from \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [action.payload, ...state.contacts],\n        loading: false\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case FILTER_CONTACTS:\n      return _objectSpread({}, state, {\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(\"\".concat(action.payload), 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filtered: null\n      });\n\n    case CONTACT_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/Webdevelopment/ContactKeeper/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","state","action","type","contacts","payload","loading","map","contact","id","filter","current","filtered","regex","RegExp","name","match","email","error"],"mappings":";;;;;;AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,EAQEC,aARF,QASO,UATP;AAWA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKV,WAAL;AACI,+BACKQ,KADL;AAEEG,QAAAA,QAAQ,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,QAA1B,CAFZ;AAGEE,QAAAA,OAAO,EAAE;AAHX;;AAKJ,SAAKT,cAAL;AACE,+BACKI,KADL;AAEEG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAmBC,OAAO,IACpCA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAP,CAAeI,EAA9B,GAAmCP,MAAM,CAACG,OAA1C,GAAoDG,OAD1C;AAFZ;;AAMF,SAAKd,cAAL;AACI,+BACKO,KADL;AAEEG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsBF,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAvD;AAFZ;;AAIJ,SAAKV,WAAL;AACA,+BACKM,KADL;AAEEU,QAAAA,OAAO,EAAET,MAAM,CAACG;AAFlB;;AAIA,SAAKT,aAAL;AACA,+BACKK,KADL;AAEEU,QAAAA,OAAO,EAAE;AAFX;;AAIA,SAAKb,eAAL;AACC,+BACKG,KADL;AAEEW,QAAAA,QAAQ,EAAEX,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsBF,OAAO,IAAI;AACzC,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,WAAcZ,MAAM,CAACG,OAArB,GAAgC,IAAhC,CAAd;AACC,iBAAOG,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACF,SAHS;AAFZ;;AAOA,SAAKd,YAAL;AACA,+BACKE,KADL;AAEEW,QAAAA,QAAQ,EAAE;AAFZ;;AAIA,SAAKZ,aAAL;AACC,+BACKC,KADL;AAEEiB,QAAAA,KAAK,EAAEhB,MAAM,CAACG;AAFhB;;AAIF;AACG,aAAOJ,KAAP;AAhDL;AAkDD,CAnDD","sourcesContent":["import {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch(action.type) {\r\n    case ADD_CONTACT:\r\n        return {\r\n          ...state,\r\n          contacts: [action.payload, ...state.contacts ],\r\n          loading: false\r\n        };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n        contact.id === action.payload.id ? action.payload : contact\r\n      )\r\n    };\r\n    case DELETE_CONTACT:\r\n        return{\r\n          ...state,\r\n          contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n        };\r\n    case SET_CURRENT:\r\n    return {\r\n      ...state,\r\n      current: action.payload\r\n    };\r\n    case CLEAR_CURRENT:\r\n    return {\r\n      ...state,\r\n      current: null\r\n    };\r\n    case FILTER_CONTACTS:\r\n     return {\r\n       ...state,\r\n       filtered: state.contacts.filter(contact => {\r\n         const regex = new RegExp(`${action.payload}`, 'gi');\r\n          return contact.name.match(regex) || contact.email.match(regex);\r\n       })\r\n     };\r\n     case CLEAR_FILTER:\r\n     return {\r\n       ...state,\r\n       filtered: null\r\n     };\r\n     case CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    default:\r\n       return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}