{"ast":null,"code":"import _defineProperty from \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\src\\\\components\\\\contacts\\\\ContactForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport DoubtContext from '../../context/doubt/doubtContext';\n\nconst DoubtForm = () => {\n  const doubtContext = useContext(DoubtContext);\n  const addDoubt = doubtContext.addDoubt,\n        updateDoubt = doubtContext.updateDoubt,\n        clearCurrent = doubtContext.clearCurrent,\n        current = doubtContext.current;\n  useEffect(() => {\n    if (current != null) {\n      setDoubt(current);\n    } else {\n      setDoubt({\n        title: '',\n        desc: '',\n        type: 'no'\n      });\n    }\n  }, [doubtContext, current]);\n\n  const _useState = useState({\n    title: '',\n    desc: '',\n    type: 'no'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        doubt = _useState2[0],\n        setDoubt = _useState2[1];\n\n  const title = doubt.title,\n        desc = doubt.desc,\n        type = doubt.type;\n\n  const onChange = e => setDoubt(_objectSpread({}, doubt, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current === null) {\n      addDoubt(doubt);\n    } else {\n      updateDoubt(doubt);\n    }\n\n    setDoubt({\n      title: '',\n      desc: '',\n      type: 'no'\n    });\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, current ? 'Edit Doubt' : 'Add Doubt'), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Title\",\n    name: \"name\",\n    value: title,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    placeholder: \"Desription\",\n    name: \"desc\",\n    value: desc,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Submit as anonymous\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"yes\",\n    checked: type === 'yes',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \"Yes\", ' ', React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"no\",\n    checked: type === 'no',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), \"No\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? 'Update Doubt' : 'Add Doubt',\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), current && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Clear\")));\n};\n\nexport default DoubtForm;","map":{"version":3,"sources":["D:/Webdevelopment/ContactKeeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","DoubtContext","DoubtForm","doubtContext","addDoubt","updateDoubt","clearCurrent","current","setDoubt","title","desc","type","doubt","onChange","e","target","name","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport DoubtContext from '../../context/doubt/doubtContext';\r\n\r\nconst DoubtForm = () => {\r\n  const doubtContext = useContext(DoubtContext);\r\n  const {addDoubt, updateDoubt, clearCurrent, current} = doubtContext;\r\n  useEffect(() => {\r\n    if(current!=null) {\r\n      setDoubt(current);\r\n    }else{\r\n      setDoubt({\r\n        title: '',\r\n        desc: '',\r\n        type: 'no'\r\n      });\r\n    }\r\n  }, [doubtContext, current]);\r\n  const [doubt, setDoubt] = useState({\r\n    title: '',\r\n    desc: '',\r\n    type: 'no'\r\n  });\r\n\r\n  const {title, desc, type} = doubt;\r\n  const onChange= e =>\r\n  setDoubt({...doubt, [e.target.name]: e.target.value});\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if(current === null){\r\n      addDoubt(doubt);\r\n    }else{\r\n      updateDoubt(doubt);\r\n    }\r\n\r\n    setDoubt({\r\n      title: '',\r\n      desc: '',\r\n      type: 'no'\r\n    });\r\n  };\r\n const clearAll = () => {\r\n   clearCurrent();\r\n }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h2 className='text-primary'>{current ? 'Edit Doubt' : 'Add Doubt'}</h2>\r\n      <input type=\"text\" placeholder=\"Title\" name=\"name\" value={title}\r\n      onChange={onChange} />\r\n      <textarea placeholder=\"Desription\" name=\"desc\" value={desc} onChange={onChange}/>\r\n      <h5>Submit as anonymous</h5>\r\n      <input type=\"radio\" name=\"type\" value=\"yes\"\r\n      checked={type ==='yes'} onChange={onChange}/>Yes{' '}\r\n      <input type=\"radio\" name=\"type\" value=\"no\"\r\n      checked={type ==='no'} onChange={onChange}/>No\r\n      <div>\r\n       <input type=\"submit\" value={current ? 'Update Doubt' : 'Add Doubt'}\r\n       className=\"btn btn-primary btn-block\"/>\r\n      </div>\r\n      {current && <div>\r\n      <button className = \"btn btn-light btn-block\" onClick={clearAll}>Clear</button>\r\n      </div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DoubtForm;\r\n"]},"metadata":{},"sourceType":"module"}