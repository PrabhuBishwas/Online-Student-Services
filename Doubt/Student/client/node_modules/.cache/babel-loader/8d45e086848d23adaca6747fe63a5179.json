{"ast":null,"code":"import _defineProperty from \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\src\\\\components\\\\contacts\\\\ContactForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nconst ContactForm = () => {\n  const _useState = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1];\n\n  const name = contact.name,\n        email = contact.email,\n        phone = contact.phone,\n        type = contact.type;\n\n  const onChange = e => setContact(_objectSpread({}, contact, {\n    [e.target.name]: e.target.value\n  }));\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Add Contact\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"name\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Contact Type\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \"Personal\", ' ', React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === 'professional',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), \"Professional\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add Contact\",\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["D:/Webdevelopment/ContactKeeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","ContactForm","name","email","phone","type","contact","setContact","onChange","e","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBACMD,QAAQ,CAAC;AACrCE,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,KAAK,EAAE,EAH8B;AAIrCC,IAAAA,IAAI,EAAE;AAJ+B,GAAD,CADd;AAAA;AAAA,QACjBC,OADiB;AAAA,QACRC,UADQ;;AAAA,QAQjBL,IARiB,GAQWI,OARX,CAQjBJ,IARiB;AAAA,QAQXC,KARW,GAQWG,OARX,CAQXH,KARW;AAAA,QAQJC,KARI,GAQWE,OARX,CAQJF,KARI;AAAA,QAQGC,IARH,GAQWC,OARX,CAQGD,IARH;;AASxB,QAAMG,QAAQ,GAAEC,CAAC,IACjBF,UAAU,mBAAKD,OAAL;AAAc,KAACG,CAAC,CAACC,MAAF,CAASR,IAAV,GAAiBO,CAAC,CAACC,MAAF,CAASC;AAAxC,KADV;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,MAA/B;AAAsC,IAAA,IAAI,EAAC,MAA3C;AAAkD,IAAA,KAAK,EAAET,IAAzD;AACA,IAAA,QAAQ,EAAEM,QADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,WAAW,EAAC,OAAhC;AAAwC,IAAA,IAAI,EAAC,OAA7C;AACA,IAAA,KAAK,EAAEL,KADP;AAEA,IAAA,QAAQ,EAAEK,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAOE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,OAA/B;AAAuC,IAAA,IAAI,EAAC,OAA5C;AACA,IAAA,KAAK,EAAEJ,KADP;AAEA,IAAA,QAAQ,EAAEI,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,EAWE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAgC,IAAA,KAAK,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,cAYa,GAZb,EAaE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAgC,IAAA,KAAK,EAAC,cAAtC;AACA,IAAA,OAAO,EAAEH,IAAI,KAAG,cADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,kBAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,aAA3B;AACA,IAAA,SAAS,EAAC,2BADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAfF,CADF;AAsBD,CAjCD;;AAmCA,eAAeJ,WAAf","sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst ContactForm = () => {\r\n  const [contact, setContact] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    type: 'personal'\r\n  });\r\n\r\n  const {name, email, phone, type} = contact;\r\n  const onChange= e =>\r\n  setContact({...contact, [e.target.name]: e.target.value});\r\n  return (\r\n    <form>\r\n      <h2 className='text-primary'>Add Contact</h2>\r\n      <input type=\"text\" placeholder=\"name\" name=\"name\" value={name}\r\n      onChange={onChange} />\r\n      <input type=\"email\" placeholder=\"Email\" name=\"email\"\r\n      value={email}\r\n      onChange={onChange} />\r\n      <input type=\"text\" placeholder=\"Phone\" name=\"phone\"\r\n      value={phone}\r\n      onChange={onChange} />\r\n      <h5>Contact Type</h5>\r\n      <input type=\"radio\" name=\"type\" value=\"personal\"\r\n      />Personal{' '}\r\n      <input type=\"radio\" name=\"type\" value=\"professional\"\r\n      checked={type==='professional'}/>Professional\r\n      <div>\r\n       <input type=\"submit\" value=\"Add Contact\"\r\n       className=\"btn btn-primary btn-block\"/>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}