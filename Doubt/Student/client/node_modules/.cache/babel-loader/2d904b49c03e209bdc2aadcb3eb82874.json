{"ast":null,"code":"import _defineProperty from \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_DOUBTS, ADD_DOUBT, DELETE_DOUBT, SET_CURRENT, CLEAR_CURRENT, UPDATE_DOUBT, FILTER_DOUBTS, CLEAR_FILTER, DOUBT_ERROR, CLEAR_DOUBTS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: action.payload,\n        loading: false\n      });\n\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [action.payload, ...state.contacts],\n        loading: false\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact),\n        loading: false\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(contact => contact._id !== action.payload),\n        loading: false\n      });\n\n    case CLEAR_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: null,\n        filtered: null,\n        error: null,\n        current: null\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case FILTER_CONTACTS:\n      return _objectSpread({}, state, {\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(\"\".concat(action.payload), 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filtered: null\n      });\n\n    case CONTACT_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/Webdevelopment/ContactKeeper/client/src/context/doubt/doubtReducer.js"],"names":["GET_DOUBTS","ADD_DOUBT","DELETE_DOUBT","SET_CURRENT","CLEAR_CURRENT","UPDATE_DOUBT","FILTER_DOUBTS","CLEAR_FILTER","DOUBT_ERROR","CLEAR_DOUBTS","state","action","type","GET_CONTACTS","contacts","payload","loading","ADD_CONTACT","UPDATE_CONTACT","map","contact","_id","DELETE_CONTACT","filter","CLEAR_CONTACTS","filtered","error","current","FILTER_CONTACTS","regex","RegExp","name","match","email","CONTACT_ERROR"],"mappings":";;;;;;AAAA,SACEA,UADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,YANF,EAOEC,aAPF,EAQEC,YARF,EASEC,WATF,EAUEC,YAVF,QAWO,UAXP;AAaA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKC,YAAL;AACE,+BACKH,KADL;AAEEI,QAAAA,QAAQ,EAAEH,MAAM,CAACI,OAFnB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKC,WAAL;AACI,+BACKP,KADL;AAEEI,QAAAA,QAAQ,EAAE,CAACH,MAAM,CAACI,OAAR,EAAiB,GAAGL,KAAK,CAACI,QAA1B,CAFZ;AAGEE,QAAAA,OAAO,EAAE;AAHX;;AAKJ,SAAKE,cAAL;AACE,+BACKR,KADL;AAEEI,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeK,GAAf,CAAmBC,OAAO,IACpCA,OAAO,CAACC,GAAR,KAAgBV,MAAM,CAACI,OAAP,CAAeM,GAA/B,GAAqCV,MAAM,CAACI,OAA5C,GAAsDK,OAD5C,CAFZ;AAKAJ,QAAAA,OAAO,EAAE;AALT;;AAOF,SAAKM,cAAL;AACI,+BACKZ,KADL;AAEEI,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeS,MAAf,CAAsBH,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBV,MAAM,CAACI,OAAxD,CAFZ;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKJ,SAAKQ,cAAL;AACM,+BACKd,KADL;AAEEI,QAAAA,QAAQ,EAAE,IAFZ;AAGEW,QAAAA,QAAQ,EAAE,IAHZ;AAIEC,QAAAA,KAAK,EAAE,IAJT;AAKEC,QAAAA,OAAO,EAAE;AALX;;AAON,SAAKxB,WAAL;AACA,+BACKO,KADL;AAEEiB,QAAAA,OAAO,EAAEhB,MAAM,CAACI;AAFlB;;AAIA,SAAKX,aAAL;AACA,+BACKM,KADL;AAEEiB,QAAAA,OAAO,EAAE;AAFX;;AAIA,SAAKC,eAAL;AACC,+BACKlB,KADL;AAEEe,QAAAA,QAAQ,EAAEf,KAAK,CAACI,QAAN,CAAeS,MAAf,CAAsBH,OAAO,IAAI;AACzC,gBAAMS,KAAK,GAAG,IAAIC,MAAJ,WAAcnB,MAAM,CAACI,OAArB,GAAgC,IAAhC,CAAd;AACC,iBAAOK,OAAO,CAACW,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BT,OAAO,CAACa,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACF,SAHS;AAFZ;;AAOA,SAAKtB,YAAL;AACA,+BACKG,KADL;AAEEe,QAAAA,QAAQ,EAAE;AAFZ;;AAIA,SAAKS,aAAL;AACC,+BACKxB,KADL;AAEEgB,QAAAA,KAAK,EAAEf,MAAM,CAACI;AAFhB;;AAIF;AACG,aAAOL,KAAP;AAhEL;AAkED,CAnED","sourcesContent":["import {\r\n  GET_DOUBTS,\r\n  ADD_DOUBT,\r\n  DELETE_DOUBT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_DOUBT,\r\n  FILTER_DOUBTS,\r\n  CLEAR_FILTER,\r\n  DOUBT_ERROR,\r\n  CLEAR_DOUBTS\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch(action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_CONTACT:\r\n        return {\r\n          ...state,\r\n          contacts: [action.payload, ...state.contacts ],\r\n          loading: false\r\n        };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n        contact._id === action.payload._id ? action.payload : contact,\r\n      ),\r\n      loading: false\r\n    };\r\n    case DELETE_CONTACT:\r\n        return{\r\n          ...state,\r\n          contacts: state.contacts.filter(contact => contact._id !== action.payload),\r\n          loading: false\r\n        };\r\n    case CLEAR_CONTACTS:\r\n          return {\r\n            ...state,\r\n            contacts: null,\r\n            filtered: null,\r\n            error: null,\r\n            current: null\r\n          };\r\n    case SET_CURRENT:\r\n    return {\r\n      ...state,\r\n      current: action.payload\r\n    };\r\n    case CLEAR_CURRENT:\r\n    return {\r\n      ...state,\r\n      current: null\r\n    };\r\n    case FILTER_CONTACTS:\r\n     return {\r\n       ...state,\r\n       filtered: state.contacts.filter(contact => {\r\n         const regex = new RegExp(`${action.payload}`, 'gi');\r\n          return contact.name.match(regex) || contact.email.match(regex);\r\n       })\r\n     };\r\n     case CLEAR_FILTER:\r\n     return {\r\n       ...state,\r\n       filtered: null\r\n     };\r\n     case CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    default:\r\n       return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}