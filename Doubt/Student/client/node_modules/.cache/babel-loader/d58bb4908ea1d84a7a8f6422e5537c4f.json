{"ast":null,"code":"var _jsxFileName = \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\src\\\\components\\\\reply\\\\Reply.js\";\nimport React, { Fragment, useState, useContext, useEffect } from 'react';\nimport ReplyContext from '../../context/reply/doubtContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst Reply = () => {\n  const replyContext = useContext(ReplyContext);\n  const reply = replyContext.reply,\n        filtered = replyContext.filtered,\n        getDoubts = replyContext.getDoubts,\n        loading = replyContext.loading;\n  useEffect(() => {\n    getDoubts(); // eslint-disable-next-line\n  }, []);\n\n  if (reply !== null && reply.length === 0 && !loading) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Please add a reply\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, reply !== null && !loading ? React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, filtered !== null ? filtered.map(reply => React.createElement(CSSTransition, {\n    key: reply._id,\n    timeout: 500,\n    classNames: \"reply\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(ReplyItem, {\n    reply: reply,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))) : doubts.map(reply => React.createElement(CSSTransition, {\n    key: reply._id,\n    timeout: 500,\n    classNames: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(ReplyItem, {\n    reply: reply,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })))) : React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nexport default Reply;","map":{"version":3,"sources":["D:/Webdevelopment/ContactKeeper/client/src/components/reply/Reply.js"],"names":["React","Fragment","useState","useContext","useEffect","ReplyContext","CSSTransition","TransitionGroup","Reply","replyContext","reply","filtered","getDoubts","loading","length","map","_id","doubts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,SAAhD,QAAiE,OAAjE;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,YAAY,GAAGN,UAAU,CAACE,YAAD,CAA/B;AADkB,QAGVK,KAHU,GAG8BD,YAH9B,CAGVC,KAHU;AAAA,QAGHC,QAHG,GAG8BF,YAH9B,CAGHE,QAHG;AAAA,QAGOC,SAHP,GAG8BH,YAH9B,CAGOG,SAHP;AAAA,QAGkBC,OAHlB,GAG8BJ,YAH9B,CAGkBI,OAHlB;AAKlBT,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS,GADK,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIF,KAAK,KAAK,IAAV,IAAkBA,KAAK,CAACI,MAAN,KAAiB,CAAnC,IAAwC,CAACD,OAA7C,EAAsD;AACpD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;;AAED,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,KAAK,IAAV,IAAkB,CAACG,OAAnB,GACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACI,GAAT,CAAaL,KAAK,IAChB,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACM,GADb;AAEE,IAAA,OAAO,EAAE,GAFX;AAGE,IAAA,UAAU,EAAC,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEN,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADH,GAUGO,MAAM,CAACF,GAAP,CAAWL,KAAK,IACd,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACM,GADb;AAEE,IAAA,OAAO,EAAE,GAFX;AAGE,IAAA,UAAU,EAAC,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEN,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CAXN,CADD,GAuBC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,CADF;AA6BD,CA3CD;;AA6CA,eAAeF,KAAf","sourcesContent":["import React, { Fragment, useState, useContext, useEffect } from 'react';\r\nimport ReplyContext from '../../context/reply/doubtContext';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nconst Reply = () => {\r\n  const replyContext = useContext(ReplyContext);\r\n\r\n  const { reply, filtered, getDoubts, loading } = replyContext;\r\n\r\n  useEffect(() => {\r\n    getDoubts();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (reply !== null && reply.length === 0 && !loading) {\r\n    return <h4>Please add a reply</h4>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {reply !== null && !loading ? (\r\n        <TransitionGroup>\r\n          {filtered !== null\r\n            ? filtered.map(reply => (\r\n                <CSSTransition\r\n                  key={reply._id}\r\n                  timeout={500}\r\n                  classNames='reply'\r\n                >\r\n                  <ReplyItem reply={reply} />\r\n                </CSSTransition>\r\n              ))\r\n            : doubts.map(reply => (\r\n                <CSSTransition\r\n                  key={reply._id}\r\n                  timeout={500}\r\n                  classNames='item'\r\n                >\r\n                  <ReplyItem reply={reply} />\r\n                </CSSTransition>\r\n              ))}\r\n        </TransitionGroup>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Reply;\r\n"]},"metadata":{},"sourceType":"module"}