{"ast":null,"code":"import _defineProperty from \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\src\\\\components\\\\contacts\\\\ContactForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const addContact = contactContext.addContact,\n        current = contactContext.current;\n  useEffect(() => {\n    if (current != null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [contactContext, current]);\n\n  const _useState = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1];\n\n  const name = contact.name,\n        email = contact.email,\n        phone = contact.phone,\n        type = contact.type;\n\n  const onChange = e => setContact(_objectSpread({}, contact, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    contactContext.addContact(contact);\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal'\n    });\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, current ? 'Edit Contact' : 'Add Contact'), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"name\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Contact Type\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === 'personal',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \"Personal\", ' ', React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === 'professional',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), \"Professional\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? 'Edit Contact' : 'Add Contact',\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["D:/Webdevelopment/ContactKeeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport ContactContext from '../../context/contact/contactContext';\r\n\r\nconst ContactForm = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const {addContact, current} = contactContext;\r\n  useEffect(() => {\r\n    if(current!=null) {\r\n      setContact(current);\r\n    }else{\r\n      setContact({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        type: 'personal'\r\n      });\r\n    }\r\n  }, [contactContext, current]);\r\n  const [contact, setContact] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    type: 'personal'\r\n  });\r\n\r\n  const {name, email, phone, type} = contact;\r\n  const onChange= e =>\r\n  setContact({...contact, [e.target.name]: e.target.value});\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    contactContext.addContact(contact);\r\n    setContact({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      type: 'personal'\r\n    });\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h2 className='text-primary'>{current ? 'Edit Contact' : 'Add Contact'}</h2>\r\n      <input type=\"text\" placeholder=\"name\" name=\"name\" value={name}\r\n      onChange={onChange} />\r\n      <input type=\"email\" placeholder=\"Email\" name=\"email\"\r\n      value={email}\r\n      onChange={onChange} />\r\n      <input type=\"text\" placeholder=\"Phone\" name=\"phone\"\r\n      value={phone}\r\n      onChange={onChange} />\r\n      <h5>Contact Type</h5>\r\n      <input type=\"radio\" name=\"type\" value=\"personal\"\r\n      checked={type ==='personal'} onChange={onChange}/>Personal{' '}\r\n      <input type=\"radio\" name=\"type\" value=\"professional\"\r\n      checked={type ==='professional'} onChange={onChange}/>Professional\r\n      <div>\r\n       <input type=\"submit\" value={current ? 'Edit Contact' : 'Add Contact'}\r\n       className=\"btn btn-primary btn-block\"/>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}