{"ast":null,"code":"import _slicedToArray from \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\src\\\\context\\\\doubt\\\\DoubtState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport DoubtContext from './doubtContext';\nimport doubtReducer from './doubtReducer';\nimport { GET_DOUBTS, ADD_DOUBT, DELETE_DOUBT, SET_CURRENT, CLEAR_CURRENT, UPDATE_DOUBT, FILTER_DOUBTS, CLEAR_DOUBTS, CLEAR_FILTER, DOUBT_ERROR } from '../types';\n\nconst DoubtState = props => {\n  const initialState = {\n    doubts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(doubtReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Get Contacts\n\n\n  const getDoubts = async () => {\n    try {\n      const res = await axios.get('/api/doubts');\n      dispatch({\n        type: GET_DOUBTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: DOUBT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Add Contact\n\n\n  const addDoubt = async doubt => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/doubts', doubt, config);\n      dispatch({\n        type: ADD_DOUBT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: DOUBT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Delete Contact\n\n\n  const deleteDoubt = async id => {\n    try {\n      await axios.delete(\"/api/doubts/\".concat(id));\n      dispatch({\n        type: DELETE_DOUBT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: DOUBT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Update Contact\n\n\n  const updateDoubt = async doubt => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(\"/api/doubts/\".concat(doubt._id), doubt, config);\n      dispatch({\n        type: UPDATE_DOUBT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: DOUBT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Clear Contacts\n\n\n  const clearDoubts = () => {\n    dispatch({\n      type: CLEAR_DOUBTS\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = doubt => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: doubt\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Filter Contacts\n\n\n  const filterDoubts = text => {\n    dispatch({\n      type: FILTER_DOUBTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(DoubtContext.Provider, {\n    value: {\n      doubts: state.doubts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addDoubt,\n      deleteDoubt,\n      setCurrent,\n      clearCurrent,\n      updateDoubt,\n      filterDoubts,\n      clearFilter,\n      getDoubts,\n      clearDoubts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default DoubtState;","map":{"version":3,"sources":["D:/Webdevelopment/ContactKeeper/client/src/context/doubt/DoubtState.js"],"names":["React","useReducer","axios","DoubtContext","doubtReducer","GET_DOUBTS","ADD_DOUBT","DELETE_DOUBT","SET_CURRENT","CLEAR_CURRENT","UPDATE_DOUBT","FILTER_DOUBTS","CLEAR_DOUBTS","CLEAR_FILTER","DOUBT_ERROR","DoubtState","props","initialState","doubts","current","filtered","error","state","dispatch","getDoubts","res","get","type","payload","data","err","response","msg","addDoubt","doubt","config","headers","post","deleteDoubt","id","delete","updateDoubt","put","_id","clearDoubts","setCurrent","clearCurrent","filterDoubts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport DoubtContext from './doubtContext';\r\nimport doubtReducer from './doubtReducer';\r\nimport {\r\n  GET_DOUBTS,\r\n  ADD_DOUBT,\r\n  DELETE_DOUBT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_DOUBT,\r\n  FILTER_DOUBTS,\r\n  CLEAR_DOUBTS,\r\n  CLEAR_FILTER,\r\n  DOUBT_ERROR\r\n} from '../types';\r\n\r\nconst DoubtState = props => {\r\n  const initialState = {\r\n    doubts: null,\r\n    current: null,\r\n    filtered: null,\r\n    error: null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(doubtReducer, initialState);\r\n\r\n  // Get Contacts\r\n  const getDoubts = async () => {\r\n    try {\r\n      const res = await axios.get('/api/doubts');\r\n\r\n      dispatch({\r\n        type: GET_DOUBTS,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: DOUBT_ERROR,\r\n        payload: err.response.msg\r\n      });\r\n    }\r\n  };\r\n\r\n  // Add Contact\r\n  const addDoubt = async doubt => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post('/api/doubts', doubt, config);\r\n\r\n      dispatch({\r\n        type: ADD_DOUBT,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: DOUBT_ERROR,\r\n        payload: err.response.msg\r\n      });\r\n    }\r\n  };\r\n\r\n  // Delete Contact\r\n  const deleteDoubt = async id => {\r\n    try {\r\n      await axios.delete(`/api/doubts/${id}`);\r\n\r\n      dispatch({\r\n        type: DELETE_DOUBT,\r\n        payload: id\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: DOUBT_ERROR,\r\n        payload: err.response.msg\r\n      });\r\n    }\r\n  };\r\n\r\n  // Update Contact\r\n  const updateDoubt = async doubt => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    try {\r\n      const res = await axios.put(\r\n        `/api/doubts/${doubt._id}`,\r\n        doubt,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: UPDATE_DOUBT,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: DOUBT_ERROR,\r\n        payload: err.response.msg\r\n      });\r\n    }\r\n  };\r\n\r\n  // Clear Contacts\r\n  const clearDoubts = () => {\r\n    dispatch({ type: CLEAR_DOUBTS });\r\n  };\r\n\r\n  // Set Current Contact\r\n  const setCurrent = doubt => {\r\n    dispatch({ type: SET_CURRENT, payload: doubt });\r\n  };\r\n\r\n  // Clear Current Contact\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  // Filter Contacts\r\n  const filterDoubts = text => {\r\n    dispatch({ type: FILTER_DOUBTS, payload: text });\r\n  };\r\n\r\n  // Clear Filter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  return (\r\n    <DoubtContext.Provider\r\n      value={{\r\n        doubts: state.doubts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n        addDoubt,\r\n        deleteDoubt,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateDoubt,\r\n        filterDoubts,\r\n        clearFilter,\r\n        getDoubts,\r\n        clearDoubts\r\n      }}\r\n    >\r\n      {props.children}\r\n    </DoubtContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DoubtState;\r\n"]},"metadata":{},"sourceType":"module"}