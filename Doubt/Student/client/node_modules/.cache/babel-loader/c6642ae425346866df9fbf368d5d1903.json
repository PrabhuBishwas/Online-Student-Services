{"ast":null,"code":"import _slicedToArray from \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Webdevelopment\\\\ContactKeeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'jill johnson',\n      email: 'jill@gmail.com',\n      phone: '111-11-111',\n      type: 'personal'\n    }],\n    current: null\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Add contact\n\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete contacts\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //update contacts\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter contacts\n  //clear current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //clear Filter\n\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      clearCurrent,\n      setCurrent\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["D:/Webdevelopment/ContactKeeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","current","state","dispatch","addContact","contact","v4","payload","deleteContact","setCurrent","updateContact","clearCurrent","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,QAQO,UARP;;AAUA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,CAAC;AACTC,MAAAA,EAAE,EAAE,CADK;AAETC,MAAAA,IAAI,EAAE,cAFG;AAGTC,MAAAA,KAAK,EAAE,gBAHE;AAITC,MAAAA,KAAK,EAAE,YAJE;AAKTC,MAAAA,IAAI,EAAE;AALG,KAAD,CADS;AAQnBC,IAAAA,OAAO,EAAE;AARU,GAArB;;AAD4B,sBAYFpB,UAAU,CAACG,cAAD,EAAiBU,YAAjB,CAZR;AAAA;AAAA,QAYrBQ,KAZqB;AAAA,QAYdC,QAZc,oBAc5B;;;AACA,QAAMC,UAAU,GAAGC,OAAO,IAAI;AAC5BA,IAAAA,OAAO,CAACT,EAAR,GAAad,IAAI,CAACwB,EAAL,EAAb;AACAH,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEf,WAAP;AAAoBsB,MAAAA,OAAO,EAAEF;AAA7B,KAAD,CAAR;AACD,GAHD,CAf4B,CAoB5B;;;AACA,QAAMG,aAAa,GAAGZ,EAAE,IAAI;AAC1BO,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEd,cAAP;AAAuBqB,MAAAA,OAAO,EAAEX;AAAhC,KAAD,CAAR;AACD,GAFD,CArB4B,CA0B5B;;;AACA,QAAMa,UAAU,GAAGJ,OAAO,IAAI;AAC5BF,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEb,WAAP;AAAoBoB,MAAAA,OAAO,EAAEF;AAA7B,KAAD,CAAR;AACD,GAFD,CA3B4B,CA8B5B;;;AACA,QAAMK,aAAa,GAAGL,OAAO,IAAI;AAC/BF,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEX,cAAP;AAAuBkB,MAAAA,OAAO,EAAEF;AAAhC,KAAD,CAAR;AACD,GAFD,CA/B4B,CAmC5B;AAEA;;;AACA,QAAMM,YAAY,GAAG,MAAM;AACzBR,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEZ;AAAP,KAAD,CAAR;AACD,GAFD,CAtC4B,CA0C5B;;;AAEA,SACE,oBAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,EAAE;AACLO,MAAAA,QAAQ,EAAEO,KAAK,CAACP,QADX;AAELM,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAFV;AAGLG,MAAAA,UAHK;AAILI,MAAAA,aAJK;AAKLG,MAAAA,YALK;AAMLF,MAAAA;AANK,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASChB,KAAK,CAACmB,QATP,CADF;AAaD,CAzDD;;AA2DA,eAAepB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER\r\n} from '../types';\r\n\r\nconst ContactState = props => {\r\n  const initialState = {\r\n    contacts: [{\r\n      id: 1,\r\n      name: 'jill johnson',\r\n      email: 'jill@gmail.com',\r\n      phone: '111-11-111',\r\n      type: 'personal'\r\n    }],\r\n    current: null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  // Add contact\r\n  const addContact = contact => {\r\n    contact.id = uuid.v4();\r\n    dispatch({type: ADD_CONTACT, payload: contact});\r\n  };\r\n\r\n  // Delete contacts\r\n  const deleteContact = id => {\r\n    dispatch({type: DELETE_CONTACT, payload: id});\r\n  };\r\n\r\n\r\n  // set current contact\r\n  const setCurrent = contact => {\r\n    dispatch({type: SET_CURRENT, payload: contact});\r\n  };\r\n  //update contacts\r\n  const updateContact = contact => {\r\n    dispatch({type: UPDATE_CONTACT, payload: contact});\r\n  };\r\n\r\n  //Filter contacts\r\n\r\n  //clear current contact\r\n  const clearCurrent = () => {\r\n    dispatch({type: CLEAR_CURRENT});\r\n  };\r\n\r\n  //clear Filter\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n    value={{\r\n      contacts: state.contacts,\r\n      current: state.current,\r\n      addContact,\r\n      deleteContact,\r\n      clearCurrent,\r\n      setCurrent\r\n    }}>\r\n    {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}